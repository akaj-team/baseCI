apply plugin: 'jacoco'
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*',
                      '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*',
                      '**/*UI.**', '**/*Exception.**', '**/*Response.**',
                      //Option, will remove this below
                      '**/*Repository.**']
    def include = ['**/*ViewModel.*', '**/*DataSource.**']
    def exclude = ['**/*Dummy*.*']
    def mainSrc = "${project.projectDir}/src/main/java"
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/Debug", includes: include, excludes: exclude)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/Debug", includes: include, excludes: exclude)
    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree], [kotlinDebugTree])
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}
check.finalizedBy(jacocoTestReport)
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
